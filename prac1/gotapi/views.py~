# Create your views here.
from django.http import HttpResponse
from django.template import Context
from django.template.loader import get_template
from django.contrib.auth.models import User
from gotapi.models import *
from django.contrib.auth.forms import UserCreationForm
from django.views.generic.edit import CreateView
from django.views.generic.edit import UpdateView
from django.views.generic.edit import DeleteView
from gotapi.forms import *
from django.shortcuts import render
from django.http import HttpResponseRedirect

def mainpage(request):
	template = get_template('mainpage.html')
	variables = Context({
		'titlehead': 'GoT Database',
		'pagetitle': 'Welcome to the database of GoT',
		'contentbody': 'Killing Starks since 1996 (Warning! Can content major Spoilers!)',
		'user': request.user,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def characterspage(request ):

	characters = Person.objects.all()
	template = get_template('characterspage.html')
	variables = Context({
		'titlehead': 'Llista Personatges',
		'pagetitle': 'Personatges',
		'contentbody': characters,
		'user': request.user,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def housespage(request ):

	houses = House.objects.all()
	template = get_template('housespage.html')
	variables = Context({
		'titlehead': 'Llista de cases',
		'pagetitle': 'Cases',
		'contentbody': houses,
		'user': request.user,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def castlespage(request, ):

	castles = Castle.objects.all()
	template = get_template('castlespage.html')
	variables = Context({
		'titlehead': 'Llista de castells',
		'pagetitle': 'Castells',
		'contentbody': castles,
		'user': request.user,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def realplacespage(request, ):

	realplaces = Realplace.objects.all()
	template = get_template('realplacespage.html')
	variables = Context({
		'titlehead': 'Places from our real users!',
		'pagetitle': 'Places from users',
		'contentbody': realplaces,
		'user': request.user,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def placespage(request, ):

	places = Place.objects.all()
	template = get_template('placespage.html')
	variables = Context({
		'titlehead': 'Llista de llocs',
		'pagetitle': 'Llocs',
		'contentbody': places,
		'user': request.user,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def singlecharacterpage(request, idaux):

	character = Person.objects.get(id = idaux)
	
	
	template = get_template('characterpage.html')
	variables = Context({
		'pagetitle': character.name,
		'contentbody1': character.house,
		'contentbody2': character.place,
		'contentbody3': character.civil_status,
		'contentbody4': character.dead,
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def singleplacepage(request, idaux):

	place = Place.objects.get(id = idaux)
	
	
	template = get_template('placepage.html')
	variables = Context({
		'pagetitle': place.name,
		'contentbody': place.description,
		
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def singlehousepage(request, idaux):

	house = House.objects.get(id = idaux)
	
	
	template = get_template('housepage.html')
	variables = Context({
		'pagetitle': house.name,
		'contentbody1': house.slogan,
		'contentbody2': house.castle.all(),
		'contentbody3': house.place,
		
	})
	
	output = template.render(variables)
	return HttpResponse(output)

def singlecastlepage(request, idaux):

	castle = Castle.objects.get(id = idaux)
	
	
	template = get_template('castlepage.html')
	variables = Context({
		'pagetitle': castle.name,
		'contentbody1': castle.place,
		'contentbody2': castle.description,
		
	})
	
	output = template.render(variables)
	return HttpResponse(output)

class CreatePerson(CreateView):

	model = Person	
	template_name = 'forms.html'
	form_class = PersonForm

	def form_valid(self, form):
		form.instance.user = self.request.user
		return super(CreatePerson, self).form_valid(form)


class CreateCastle(CreateView):

	model = Castle	
	template_name = 'forms.html'
	form_class = CastleForm

	def form_valid(self, form):
		form.instance.user = self.request.user
		return super(CreateCastle, self).form_valid(form)

class CreatePlace(CreateView):

	model = Place	
	template_name = 'forms.html'
	form_class = PlaceForm

	def form_valid(self, form):
		form.instance.user = self.request.user
		return super(CreatePlace, self).form_valid(form)

class CreateRealplace(CreateView):

	model = House	
	template_name = 'forms.html'
	form_class = RealplaceForm

	def form_valid(self, form):
		form.instance.user = self.request.user
		return super(CreateRealplace, self).form_valid(form)

class CreateHouse(CreateView):

	model = House	
	template_name = 'forms.html'
	form_class = HouseForm

	def form_valid(self, form):
		form.instance.user = self.request.user
		return super(CreateHouse, self).form_valid(form)

def register(request):
    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        if form.is_valid():
            new_user = form.save()
            return HttpResponseRedirect("/")
    else:
        form = UserCreationForm()
    return render(request, "registration/register.html", {
        'form': form,
    })


